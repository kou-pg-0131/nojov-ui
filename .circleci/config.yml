version: 2.1

orbs:
  slack: circleci/slack@3.4.2

executors:
  node:
    docker:
      - image: node:14.16.1

  terraform:
    docker:
      - image: hashicorp/terraform:0.14.10
        environment:
          TF_LOG: trace
          TF_LOG_PATH: terraform.log

  lambda:
    docker:
      - image: lambci/lambda:build-nodejs12.x
        environment:
          HOME: /root

commands:
  setup_aws_credentials:
    steps:
      - run:
          name: create aws credentials and config
          command: |
            mkdir -p ~/.aws
            echo '[default]'                                       > ~/.aws/credentials
            echo "aws_access_key_id=${AWS_ACCESS_KEY_ID}"         >> ~/.aws/credentials
            echo "aws_secret_access_key=${AWS_SECRET_ACCESS_KEY}" >> ~/.aws/credentials
            echo '[default]'           > ~/.aws/config
            echo "region = us-east-1" >> ~/.aws/config

  yarn_install:
    steps:
      - restore_cache:
          key: v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run:
          name: yarn install
          command: yarn install --check-files
      - save_cache:
          key: v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules

  install_yarn:
    steps:
      - run:
          name: install yarn
          command: |
            curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.22.10
            echo 'export PATH=$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH' >> $BASH_ENV

jobs:
  api_test:
    executor: lambda
    working_directory: ~/project/api
    steps:
      - checkout:
          path: ~/project
      - install_yarn
      - yarn_install
      - run:
          name: jest
          command: yarn run test:cv
      - run:
          name: send coverage report to codecov
          command: bash <(curl -s https://codecov.io/bash)
      - slack/status

  api_tf_plan:
    executor: terraform
    working_directory: ~/project/api
    steps:
      - checkout:
          path: ~/project
      - run:
          name: install required command
          command: apk --update add bash curl
      - setup_aws_credentials
      - run:
          name: terraform plan for dev
          working_directory: ~/project/api/terraform/envs/dev
          command: |
            terraform init
            terraform plan
      - run:
          name: terraform plan for prod
          working_directory: ~/project/api/terraform/envs/prod
          command: |
            terraform init
            terraform plan
      - store_artifacts:
          path: terraform/envs/dev/terraform.log
      - store_artifacts:
          path: terraform/envs/prod/terraform.log
      - slack/status

  ui_build:
    executor: node
    working_directory: ~/project/ui
    steps:
      - checkout:
          path: ~/project
      - yarn_install
      - run:
          name: eslint
          command: yarn run lint
      - run:
          name: build
          command: yarn run build
      - slack/status

  ui_tf_plan:
    executor: terraform
    working_directory: ~/project/ui/terraform
    steps:
      - checkout:
          path: ~/project
      - run:
          name: install required commands
          command: apk --update add bash curl
      - setup_aws_credentials
      - run:
          name: terraform plan
          command: |
            terraform init
            terraform plan
      - store_artifacts:
          path: terraform/terraform.log
      - slack/status

  ui_tf_apply:
    executor: terraform
    working_directory: ~/project/ui/terraform
    steps:
      - checkout:
          path: ~/project
      - run:
          name: install required command
          command: apk --update add bash curl
      - setup_aws_credentials
      - run:
          name: terraform apply
          command: |
            terraform init
            terraform apply -auto-approve
      - store_artifacts:
          path: terraform/terraform.log
      - slack/status

workflows:
  build:
    jobs:
      - api_test
      - api_tf_plan

      - ui_build
      - ui_tf_plan
      - ui_tf_apply:
          filters:
            branches:
              only: [main]
